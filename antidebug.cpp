#include <Windows.h>
#include <TlHelp32.h>
#include <winternl.h>
#include <ntstatus.h>

// Function to get the PEB of the current process
LPVOID GetPEB()
{
    PROCESS_BASIC_INFORMATION pbi;
    if (NT_SUCCESS(NtQueryInformationProcess(GetCurrentProcess(), ProcessBasicInformation, &pbi, sizeof(pbi), NULL)))
    {
        return pbi.PebBaseAddress;
    }
    else
    {
        return NULL;
    }
}

int main()
{
    // Get the PEB of the current process
    LPVOID peb = GetPEB();

    // Get the address of the process heap
    LPVOID heap = (LPVOID)((DWORD_PTR)peb + 0x18);

    // Get the end of the heap
    LPVOID end_of_heap = (LPVOID)((DWORD_PTR)heap + 0x14);

    // Check for the binary data marker (0xABABABAB) at the end of the heap
    if (*(DWORD*)end_of_heap == 0xABABABAB)
    {
        // Marker found, program is being debugged
        // Do not save the pointer and quit the program
        return 0;
    }
    else
    {
        // Marker not found, continue with program execution
        // Save the pointer and continue with program logic
        // ...
    }

    return 0;
}
